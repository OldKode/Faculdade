"""
 Example program to show using an array to back a grid on-screen.
 
 Sample Python/Pygame Programs
 Simpson College Computer Science
 http://programarcadegames.com/
 http://simpson.edu/computer-science/
 
 Explanation video: http://youtu.be/mdTeqiWyFnc
"""
import pygame
import random
 
# Define some colors
BLACK = (0, 0, 0)
WHITE = (255, 255, 255)
GREEN = (0, 255, 0)
RED = (255, 0, 0)
 
# This sets the WIDTH and HEIGHT of each grid location
WIDTH = 64
HEIGHT = 64
 
# This sets the margin between each cell
MARGIN = 0
 
# Create a 2 dimensional array. A two dimensional
# array is simply a list of lists.
grid = []
for row in range(10):
    # Add an empty array that will hold each cell
    # in this row
    grid.append([])
    for column in range(10):
        grid[row].append(0)  # Append a cell
 
# Set row 1, cell 5 to one. (Remember rows and
# column numbers start at zero.)

# 0 - agua , 1 - terra, 2 - grama

for row in range(10):
    for column in range(10):
        campo_invalido = True
        while(campo_invalido):
            campo_invalido = False
            valor = random.randint(0,2)
            if(valor == 0):
                if(row>0):
                    if(grid[row - 1,column - 1] == 2 or grid[row - 1,column] == 2 or grid[row - 1,column + 1] == 2):
                        campo_invalido = True

                if(column > 0):
                    if(grid[row,column] == 2):
                        campo_invalido = True
                        
                if(column < 9):
                    if(grid[row,column] == 2):
                        campo_invalido = True
                        
                if(row < 9):
                    if(grid[row + 1,column - 1] == 2 or grid[row + 1,column] == 2 or grid[row + 1,column + 1] == 2):
                        campo_invalido = True
                

#carregando texturas
textura_imagem  = pygame.image.load("textura.jpg")
textura_agua    = pygame.image.load("agua.jpg")
textura_terra   = pygame.image.load("terra.jpg")
textura_grama   = pygame.image.load("grama.jpg")
texturas_pack   = (textura_agua, textura_terra, textura_grama)

# Initialize pygame
pygame.init()
 
# Set the HEIGHT and WIDTH of the screen
WINDOW_SIZE = [640, 640]
screen = pygame.display.set_mode(WINDOW_SIZE)
 
# Set title of screen
pygame.display.set_caption("Array Backed Grid")
 
# Loop until the user clicks the close button.
done = False
 
# Used to manage how fast the screen updates
clock = pygame.time.Clock()
 
# -------- Main Program Loop -----------
while not done:
    for event in pygame.event.get():  # User did something
        if event.type == pygame.QUIT:  # If user clicked close
            done = True  # Flag that we are done so we exit this loop
        elif event.type == pygame.MOUSEBUTTONDOWN:
            # User clicks the mouse. Get the position
            pos = pygame.mouse.get_pos()
            # Change the x/y screen coordinates to grid coordinates
            column = pos[0] // (WIDTH + MARGIN)
            row = pos[1] // (HEIGHT + MARGIN)
            # Set that location to one
            if grid[row][column] == 2:
                grid[row][column] = 0
            else:
                grid[row][column] = grid[row][column] + 1
            print("Click ", pos, "Grid coordinates: ", row, column,"valor",grid[row][column])
 
    # Set the screen background
    screen.fill(BLACK)
 
    # Draw the grid
    for row in range(10):
        for column in range(10):
            posicao = ((MARGIN + WIDTH) * column + MARGIN,(MARGIN + HEIGHT) * row + MARGIN)
            screen.blit(texturas_pack[grid[row][column]],posicao)
                
 
    # Limit to 60 frames per second
    clock.tick(60)
 
    # Go ahead and update the screen with what we've drawn.
    pygame.display.flip()
 
# Be IDLE friendly. If you forget this line, the program will 'hang'
# on exit.
pygame.quit()
