# -*- coding: cp1252 -*-
from visual import *
import random
import wx

# Locais
campo       =  box(pos=(0,0,0), size=(90,1,45), color=color.green)
lateral1    =  box(pos=(0,0,0-(campo.size.z/2)), size=(90,1,1), color=color.white)
lateral2    =  box(pos=(0,0,0+(campo.size.z/2)), size=(90,1,1), color=color.white)
fim_campo1  =  box(pos=(-(campo.size.x/2),0,0), size=(1,1,45), color=color.white)
fim_campo2  =  box(pos=((campo.size.x/2),0,0), size=(1,1,45), color=color.white)

meio_campo  =  box(pos=(0,0,0), size=(1,1,45), color=color.white)
circulo_meio=  ring(pos=(0,-0.2,0), axis=(0,1,0), radius = 9.15, thickness=1)
bola_meio   =cylinder(pos=(0,0,0),axis=(0,1,0), radius=0.5)

area1       =  curve( pos=[(-(campo.size.x/2),1,16), (-(campo.size.x/2)+16.5,1,16), (-(campo.size.x/2)+16.5,1,-16) , (-(campo.size.x/2),1,-16)], color=color.white)
trave1_area1= cylinder(pos=(-(campo.size.x/2),0,3.66),axis=(0,3,0), radius=0.5)
trave2_area1= cylinder(pos=(-(campo.size.x/2),0,-3.66),axis=(0,3,0), radius=0.5)
trave3_area2= cylinder(pos=(-(campo.size.x/2),2.5,-3.66),axis=(0,0,7.32), radius=0.5)
miniarea1   =  curve( pos=[(-(campo.size.x/2),1,trave1_area1.pos.z + 5.5), (-(campo.size.x/2)+5.5,1,trave1_area1.pos.z + 5.5), (-(campo.size.x/2)+5.5,1,trave2_area1.pos.z-5.5) , (-(campo.size.x/2),1,trave2_area1.pos.z - 5.5)], color=color.white)



area2       =  curve( pos=[((campo.size.x/2),1,16), ((campo.size.x/2)-16.5,1,16), ((campo.size.x/2)-16.5,1,-16) , ((campo.size.x/2),1,-16)], color=color.white)
trave1_area2=  cylinder(pos=((campo.size.x/2),0,3.66),axis=(0,3,0), radius=0.5)
trave2_area2=  cylinder(pos=((campo.size.x/2),0,-3.66),axis=(0,3,0), radius=0.5)
trave3_area2=  cylinder(pos=((campo.size.x/2),2.5,-3.66),axis=(0,0,7.32), radius=0.5)
miniarea2   =  curve( pos=[((campo.size.x/2),1,trave1_area2.pos.z + 5.5), ((campo.size.x/2)-5.5,1,trave1_area2.pos.z + 5.5), ((campo.size.x/2)-5.5,1,trave2_area2.pos.z-5.5) , ((campo.size.x/2),1,trave2_area2.pos.z - 5.5)], color=color.white)


def movi_ball(x,y,z):
    ######INPUTS
    gravidade   = 9.8
    angulo      = 45
    rapidez     = 20
    angulo      = y
    rapidez     = x
    direcao     = z
    radiano     = ((2 * math.pi) * angulo )/ 360

    #calculando a rapidez da direção X e Y.
    rapidez_x   = rapidez * math.cos(radiano)
    rapidez_y   = rapidez * math.sin(radiano)

    #chama bola
    cores = (color.white,color.blue,color.red,color.green,color.black)
    ball = sphere(pos=(0, campo.size.y +0.25,0), radius=0.5, color = random.choice(cores))
           
    #Declarando o vetor da gravidade
    grav = vector(0, gravidade * -1,0)
    #Ativando a trilha da bola 
    ball.trail = curve(color=ball.color)
    #Declarando velocidade inicial do objeto ball
    ball.velocity = vector(rapidez_x,rapidez_y,direcao)

    #Declarando Delta time e time.
    deltat = 0.005
    t = 0

    while ball.pos.x - (campo.size.x/2) <= 1 and ball.pos.x + (campo.size.x/2) >= -1 and ball.pos.z - (campo.size.z/2) <= 0 and ball.pos.z + (campo.size.z/2) > 0:
        #tempo de espera
        rate(500)

        #Lançamento Obliquo
        ball.pos.x      = ball.pos.x + (ball.velocity.x * deltat)
        ball.pos.y      = ball.pos.y + (ball.velocity.y * deltat) - ((gravidade*(deltat*deltat))/2)
        ball.pos.z      = ball.pos.z + (ball.velocity.z * deltat)
        ball.velocity.y = ball.velocity.y - (gravidade * deltat)

        #Efeito da gravidade
        #ball.velocity = ball.velocity + ((grav * (deltat * deltat))/2)
        #Movimenta bola
        #ball.pos += ball.velocity * deltat

        if trave1_area1.pos.z - 1 < ball.pos.z < trave1_area1.pos.z + 1 and trave1_area1.pos.x > ball.pos.x :
            ball.velocity.x = ball.velocity.x * -1

        if trave2_area1.pos.z - 1 < ball.pos.z < trave2_area1.pos.z + 1 and trave2_area1.pos.x > ball.pos.x :
            ball.velocity.x = ball.velocity.x * -1

        if trave1_area2.pos.z - 1 < ball.pos.z < trave1_area2.pos.z + 1 and trave1_area2.pos.x < ball.pos.x :
            ball.velocity.x = ball.velocity.x * -1

        if trave2_area2.pos.z - 1 < ball.pos.z < trave2_area2.pos.z + 1 and trave2_area2.pos.x < ball.pos.x :
            ball.velocity.x = ball.velocity.x * -1

        if ball.pos.y <= campo.pos.y + campo.size.y:
            ball.velocity.y = ball.velocity.y * -1
                
        ball.trail.append(pos=ball.pos)
        t = t + deltat

movi_ball(-10,15,0.8)
rate(500)
movi_ball(-10,15,-0.8)
rate(500)
movi_ball(10,15,0.8)
rate(500)
movi_ball(10,15,-0.8)
